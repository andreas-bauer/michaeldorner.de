<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Welcome! :tada: on Michael Dorner</title><link>https://www.michaeldorner.de/</link><description>Recent content in Welcome! :tada: on Michael Dorner</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Â© 2024 Michael Dorner</copyright><lastBuildDate>Sat, 27 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://www.michaeldorner.de/index.xml" rel="self" type="application/rss+xml"/><item><title>Need for Tax Compliance in Software Engineering</title><link>https://www.michaeldorner.de/posts/need-for-tax-compliance-in-software-engineering/</link><pubDate>Sat, 27 Apr 2024 00:00:00 +0000</pubDate><guid>https://www.michaeldorner.de/posts/need-for-tax-compliance-in-software-engineering/</guid><description>In third blog post in the series on tax compliance in software engineering, we will estimate the prevelance of cross-border collaboration, and therefore, the need for tax compliance in software engineering by measuring cross-border code review in a multinational software company.</description></item><item><title>Challenges for Tax Compliance in Software Engineering</title><link>https://www.michaeldorner.de/posts/challenges-of-tax-compliance-in-software-engineering/</link><pubDate>Tue, 26 Mar 2024 00:00:00 +0000</pubDate><guid>https://www.michaeldorner.de/posts/challenges-of-tax-compliance-in-software-engineering/</guid><description>In this second blog post in the series on tax compliance in software engineering, we will discuss the unique and fundamental challenges of taxing collaborative software engineering.</description></item><item><title>Foundations of Tax Compliance in Software Engineering</title><link>https://www.michaeldorner.de/posts/foundations-of-tax-compliance-in-software-engineering/</link><pubDate>Fri, 08 Mar 2024 00:00:00 +0000</pubDate><guid>https://www.michaeldorner.de/posts/foundations-of-tax-compliance-in-software-engineering/</guid><description>In this first blog post in the series on tax compliance in software engineering, we start with a gentle introduction to international standards in multinational taxation and its basic Arm&amp;rsquo;s Length Principle from a software engineering perspective.</description></item><item><title>The Upper Bound of Information Diffusion in Code Review</title><link>https://www.michaeldorner.de/publications/information-diffusion-in-code-review/</link><pubDate>Wed, 03 Jan 2024 00:00:00 +0000</pubDate><guid>https://www.michaeldorner.de/publications/information-diffusion-in-code-review/</guid><description>Authors # Michael Dorner, Daniel Mendez, Krzysztof Wnuk, and Jacek Czerwonka
Abstract # Background: Code review, the discussion around a code change among humans, forms a communication network that enables its participants to exchange and spread information.</description></item><item><title>Describing Globally Distributed Software Architectures for Tax Compliance</title><link>https://www.michaeldorner.de/publications/taxing-software-architecture/</link><pubDate>Fri, 01 Dec 2023 00:00:00 +0000</pubDate><guid>https://www.michaeldorner.de/publications/taxing-software-architecture/</guid><description>https://arxiv.org/abs/2312.00925</description></item><item><title>Taxing Collaborative Software Engineering</title><link>https://www.michaeldorner.de/publications/taxing-collaborative-software-engineering/</link><pubDate>Tue, 19 Sep 2023 00:00:00 +0000</pubDate><guid>https://www.michaeldorner.de/publications/taxing-collaborative-software-engineering/</guid><description/></item><item><title>Only Time Will Tell: Modelling Information Diffusion in Code Review with Time-Varying Hypergraphs</title><link>https://www.michaeldorner.de/publications/only-time-will-tell/</link><pubDate>Tue, 20 Sep 2022 00:00:00 +0000</pubDate><guid>https://www.michaeldorner.de/publications/only-time-will-tell/</guid><description>Best Paper Award at ESEM'22 Authors # Michael Dorner, Darja Smite, Daniel Mendez, Krzysztof Wnuk, and Jacek Czerwonka
Abstract # Background: Modern code review is expected to facilitate knowledge sharing: All relevant information, the collective expertise, and meta-information around the code change and its context become evident, transparent, and explicit in the corresponding code review discussion.</description></item><item><title>About me</title><link>https://www.michaeldorner.de/about-me/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.michaeldorner.de/about-me/</guid><description>The Researcher # I love coding. I see beauty in code. Of course, not every code sparks joy, but nicely drafted, well-engineered software does. But what is well-engineered software? How can we make better software?</description></item><item><title>Imprint</title><link>https://www.michaeldorner.de/imprint/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.michaeldorner.de/imprint/</guid><description>asdf</description></item><item><title>Talks</title><link>https://www.michaeldorner.de/talks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.michaeldorner.de/talks/</guid><description> Under construction&amp;hellip;</description></item></channel></rss>